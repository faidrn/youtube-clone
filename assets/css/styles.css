:root{
	--borders-color: #EAECEE;
	--borders-dark-color: #D5D8DC;
	--height-icons: 3vw;
	--width-icons: 3vw;
	--search-text-color: hsl(0, 0%, 6.7%);
	--height-circles: 2.7vw;
	--width-circles: 2.7vw;
}

*{
	font-family: 'Roboto', sans-serif;
}

.absolute{
	position: absolute;
}

.cursor-pointer{
	cursor: pointer;
}

/*MAIN STRUCTURE*/
.container{
	background: transparent;
}

.header{
	/*
	position: fixed = el elemento no permanecera en el flujo natural de la pagina. se posicionara a si mismo de acuerdo al viewport. Debido a que est치 posicionado, actuar치 como un punto de anclaje para el siguiente elemento absolutamente posicionado.
	
	z-index = deffine el orden de los elementos en el eje Z, solo funciona en elementos posicionados (cualquiera q no sea stactic). Si el valor es positivo el elemento es movido en frente de los demas elementos, de lo contrario es movido detras del resto de elementos
*/
	position: fixed;
	width: 100%;
	height: 9vh;
	border: 1px solid var(--borders-color);
	z-index: 1;
	transform: translateY(0);
}

.nav-bar{
	height: 9vh;
	padding: 0 1.7vw;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

.navbar-left{
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
}

.icon-menu{
	/*
	box-sizing = define como se calcula el ancho y alto de un elemento, ya sea q incluyan o no el padding y los borders. 
	border-box = El ancho y alto del elemento aplica a todas las partes del elemento: el contenido, el padding y los borders
	
	Display = establece como se va a visualizar el elemento. 
	inline-block = comparte las propiedades inline y block del elemento. inline xq el elemento se comporta como texto simple y se inserta en un bbloqque de texto; block porque se le puede aplicar un alto y un ancho.
	
	position: relative = el elemento permanecera en el ffluo natural de la pagina. Actuara como un punto de anclae para los bloques absolutamente posicionados.
	*/
	/*height: 3vw;
	width: 3vw;*/
	height: var(--height-icons);
	width: var(--width-icons);
	padding-right: 1vw;
	box-sizing: border-box;
	display: inline-block;
	position: relative;
}

.youtube-logo{
	width: 7.7vw;
	height: 9vh;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
}

.youtube-logo p{
	font-family: 'Anton', sans-serif;
	font-size: 21px;
}

.navbar-center{
	/*
	flex = es una propiedad resumida que indica la capacidad de un elemento flexible para alterar sus dimensiones y llenar el espacio disponible. Los elementos flexibles pueden ser estirados para utilizar el espacio disponible proporcional a su factor de crecimiento flexible o su factor de contracci칩n flexible para evitar desbordamiento.
	flex: flex-grow flex-shrin flex-basis;
	
	flex-grow = define la habilidad de crecer para un elemento flex, si es necesario
	flex-shhrink = define la habilidad de un elemento flex de encongerse, si es necesario
	flex-basis = Esto define el tama침o predeterminado de un elemento antes de que se distribuya el espacio restante.
	*/
	flex: 0 1 54vw;
	min-width: 0px;
	height: 9vh;
	border: 1px solid red;
}

.search-bar{
	height: 9vh;
	/*margin: 0 0 0 3.5vw;*/
    padding: 0 4px;
	display: flex;
	flex-direction: row;
	align-items: center;
	flex: 1;
    flex-basis: 1e-9px;
	border: 1px solid;
}

.search-box{
	height: 5vh;
	text-align: center;
	border: 1px solid var(--borders-dark-color);
	border-right: none;
	border-radius: 2px 0 0 2px;
	box-shadow: inset 0 1px 2px #eee;
	color: black;
	padding: 2px 6px;
	margin-left: 22px;
    flex: 1;
    flex-basis: 1e-9px;
    display: flex;
    flex-direction: row;
}

.icon-search{
	height: 1.5vw;
	width: 1.5vw;
	/*transform: translateY(4px);*/
	margin-top: 4px;
}

.icon-content{
	/*display: none;
	position: absolute;*/
	left: 0;
	padding: 0 10px;
	color: #030303;
}

.input-search{
	box-sizing: border-box;
	padding: 1px 0;
	font-size: 16px;
	font-weight: 400;
	width: 100%;
	line-height: 24px;
	border: none;
	box-shadow: none;
	color: var(--search-text-color);
}

.icon-clear{
	height: 1vw;
	width: 1vw;
	/*transform: translateY(7px);*/
	margin-top: 7px;
}

.button-search{
	border: 1px solid #d3d3d3;
	background-color: #f8f8f8;
    border-radius: 0 2px 2px 0;
    margin: 0;
}

.icon-search-2{
	height: 1.8vw;
	width: 3vw;
}

.circles{
	height: var(--height-circles);
	width: var(--width-circles);
	border-radius: 50px;
	display: flex;
	align-items: center;
	justify-content: center;
}

.add-voice-container{	
	background: #f9f9f9;
	margin-left: 4px;
}

.icon-microphone{
	height: 2vw;
	width: 1.1vw;
}

.navbar-right{
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-evenly;
}

.notifications{
	background: white;
	border: 1px solid;
}

/*.container-notifications-icon{}*/

.icon-notifications{
	position: relative;
	transform: translateX(0.6vw);
}

.notifications-number{
	height: 1.2vw;
	width: 1.6vw;
	background: #c00;
	border-radius: 25px;
	position: absolute;
	top: 0px;
	right: 0px;
	/*display: flex;
	align-items: center;
	justify-content: center;*/
	/*transform: translateX(0vw)
		translateY(-0.2vw) 
		translateZ(1vw);*/
/*}

.notifications-number p{*/
	color: white;
	font-size: 2vh;
	font-weight: 100;
	/*margin: 0;
	text-align: center;*/
}

.picture-user{
	background: white;
	overflow: hidden;
	/*margin-left: 4px;*/
}

.user-profile{
	width: 3vw;
	height: 3vw;
}